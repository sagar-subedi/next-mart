services:

  # Kafka Service
  kafka-service:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./apps/kafka-service/Dockerfile
    container_name: next-mart-kafka-service-dev
    restart: unless-stopped
    ports:
      - "6009:6009"
    environment:
      NODE_ENV: development
      PORT: 6009
      KAFKA_API_KEY: ${KAFKA_API_KEY}
      KAFKA_API_SECRET: ${KAFKA_API_SECRET}
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - next-mart-network

  # Auth Service
  auth-service:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: next-mart-auth-service-dev
    restart: unless-stopped
    ports:
      - "6001:6001"
    environment:
      NODE_ENV: development
      PORT: 6001
      DATABASE_URL: ${DATABASE_URL}
      REDIS_DATABASE_URI: ${REDIS_DATABASE_URI}
    networks:
      - next-mart-network

  # Product Service
  product-service:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./apps/product-service/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: next-mart-product-service-dev
    restart: unless-stopped
    ports:
      - "6002:6002"
    environment:
      NODE_ENV: development
      PORT: 6002
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - next-mart-network

  # Order Service
  order-service:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./apps/order-service/Dockerfile
    container_name: next-mart-order-service-dev
    restart: unless-stopped
    ports:
      - "6003:6003"
    environment:
      NODE_ENV: development
      PORT: 6003
      DATABASE_URL: ${DATABASE_URL}
      REDIS_DATABASE_URI: ${REDIS_DATABASE_URI}
    networks:
      - next-mart-network

  # Recommendation Service
  recommendation-service:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./apps/recommendation-service/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: next-mart-recommendation-service-dev
    restart: unless-stopped
    ports:
      - "6007:6007"
    environment:
      NODE_ENV: development
      PORT: 6007
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_API_KEY: ${KAFKA_API_KEY}
      KAFKA_API_SECRET: ${KAFKA_API_SECRET}
    depends_on:
      kafka-service:
        condition: service_started
    networks:
      - next-mart-network

    # Admin Service
  admin-service:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./apps/admin-service/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: next-mart-admin-service-dev
    restart: unless-stopped
    ports:
      - "6004:6004"
    environment:
      NODE_ENV: development
      PORT: 6004
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_API_KEY: ${KAFKA_API_KEY}
      KAFKA_API_SECRET: ${KAFKA_API_SECRET}
    depends_on:
      kafka-service:
        condition: service_started
    networks:
      - next-mart-network

  # Recommendation Service
  chat-service:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./apps/chatting-service/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: next-mart-chat-service-dev
    restart: unless-stopped
    ports:
      - "6005:6005"
    environment:
      NODE_ENV: development
      PORT: 6005
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_API_KEY: ${KAFKA_API_KEY}
      KAFKA_API_SECRET: ${KAFKA_API_SECRET}
    depends_on:
      kafka-service:
        condition: service_started
    networks:
      - next-mart-network

  # Logger Service
  logger-service:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./apps/logger-service/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: next-mart-logger-service-dev
    restart: unless-stopped
    ports:
      - "6006:6006"
    environment:
      NODE_ENV: development
      PORT: 6006
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_API_KEY: ${KAFKA_API_KEY}
      KAFKA_API_SECRET: ${KAFKA_API_SECRET}
    depends_on:
      kafka-service:
        condition: service_started
    networks:
      - next-mart-network

        # Recommendation Service
  seller-service:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./apps/seller-service/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: next-mart-seller-service-dev
    restart: unless-stopped
    ports:
      - "6008:6008"
    environment:
      NODE_ENV: development
      PORT: 6008
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_API_KEY: ${KAFKA_API_KEY}
      KAFKA_API_SECRET: ${KAFKA_API_SECRET}
    depends_on:
      kafka-service:
        condition: service_started
    networks:
      - next-mart-network


  # API Gateway
  api-gateway:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: next-mart-api-gateway-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: development
      PORT: 8080
    depends_on:
      auth-service:
        condition: service_started
      product-service:
        condition: service_started
      order-service:
        condition: service_started
      recommendation-service:
        condition: service_started
    networks:
      - next-mart-network

  # User UI
  # user-ui:
  #   env_file:
  #     - .env
  #   build:
  #     context: .
  #     dockerfile: ./apps/user-ui/Dockerfile
  #   container_name: next-mart-user-ui-dev
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     NODE_ENV: development
  #     NEXT_PUBLIC_API_URL: http://api-gateway:8080
  #     DEBUG: "true"
  #   depends_on:
  #     api-gateway:
  #       condition: service_started
  #   networks:
  #     - next-mart-network

  # # Seller UI
  # seller-ui:
  #   env_file:
  #     - .env
  #   build:
  #     context: .
  #     dockerfile: ./apps/seller-ui/Dockerfile
  #   container_name: next-mart-seller-ui-dev
  #   restart: unless-stopped
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     NODE_ENV: development
  #     NEXT_PUBLIC_API_URL: http://api-gateway:8080
  #     DEBUG: "true"
  #   depends_on:
  #     api-gateway:
  #       condition: service_started
  #   networks:
  #     - next-mart-network


networks:
  next-mart-network:
    driver: bridge