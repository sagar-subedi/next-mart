name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  packages: write

env:
  NODE_VERSION: '20'
  REGISTRY: ghcr.io
  IMAGE_NAME: sagar-subedi/next-mart

jobs:
  # Unit Testing
  # test:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       service: [auth-service, product-service, order-service, recommendation-service, kafka-service]
    
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: 'npm'
      
  #     - name: Install dependencies
  #       run: npm ci
      
  #     - name: Run tests for ${{ matrix.service }}
  #       run: npx nx test ${{ matrix.service }}
  #       env:
  #         CI: true

  # Build Docker Images
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: 
          - auth-service
          - product-service
          - order-service
          - recommendation-service
          - kafka-service
          - chatting-service
          - seller-service
          - admin-service
          - logger-service
          - api-gateway
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}:${{ github.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}:latest
          cache-from: type=gha,scope=${{ matrix.service }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service }}
  # Deploy to Development Environment
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    environment: development
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to development environment
        run: |
          echo "Deploying to development environment..."
          # Add deployment scripts here
          # For example: kubectl apply -f k8s/dev/
          # Or: docker-compose -f docker-compose.dev.yml up -d

  # Deploy to Production Environment
  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to production environment
        run: |
          echo "Deploying to production environment..."
          # Add production deployment scripts here
          # For example: kubectl apply -f k8s/prod/
          # Or: docker-compose -f docker-compose.prod.yml up -d